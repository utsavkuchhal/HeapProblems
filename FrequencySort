import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;

public class FrequencySort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {4, 4, 2, 2, 2, 2, 3, 3, 1, 1, 6, 7, 5};
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();

		Comparator<int[]> compare = new Comparator<int[]>() {
			@Override
			public int compare(int[] o1, int[] o2) {
				if (o1[0] > o2[0]) {
					return -1;
				} else if (o1[0] == o2[0]) {
					if (o1[1] > o2[1]) {
						return -1;
					} else {
						return 1;
					}
				} else {
					return 1;
				}
			}
		};

		PriorityQueue<int[]> max_heap = new PriorityQueue<int[]>(compare);

		for (int i = 0; i < arr.length; i++) {
			map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
		}

		Set<Integer> keyset = map.keySet();

		for (int k : keyset) {
			max_heap.add(new int[] { map.get(k), k });
		}
		
		while(!max_heap.isEmpty()) {
			int freq = max_heap.peek()[0];
			for (int i = 0; i < freq; i++) {
				System.out.println(max_heap.peek()[1] + " ");
			}
			max_heap.remove();
		}
	}

}
